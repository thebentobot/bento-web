---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../../styles/global.css";
import { SITE_TITLE, SITE_DESCRIPTION, AUTHOR, KEYWORDS } from "../../consts";
import { ClientRouter } from "astro:transitions";
import LoadingIndicator from "astro-loading-indicator/component";
import { AstroFont } from "astro-font";
import { join } from "path";

interface Props {
    title: string;
    description?: string;
    image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description = SITE_DESCRIPTION, image = "/29.webp" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />

<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.webp" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.webp" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.webp" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<AstroFont
    config={[
        {
            name: "Inter",
            preload: true,
            src: [
                {
                    style: "normal",
                    weight: "400",
                    path: join(process.cwd(), "public", "fonts", "inter-v18-latin-regular.woff2"),
                },
                {
                    style: "normal",
                    weight: "500",
                    path: join(process.cwd(), "public", "fonts", "inter-v18-latin-500.woff2"),
                },
                {
                    style: "normal",
                    weight: "600",
                    path: join(process.cwd(), "public", "fonts", "inter-v18-latin-600.woff2"),
                },
                {
                    style: "normal",
                    weight: "700",
                    path: join(process.cwd(), "public", "fonts", "inter-v18-latin-700.woff2"),
                },
            ],
            display: "swap",
            selector: "body",
            fallback: "sans-serif",
            cssVariable: "font-sans",
        },
        {
            name: "Inter Mono",
            preload: true,
            src: [
                {
                    style: "normal",
                    weight: "400",
                    path: join(process.cwd(), "public", "fonts", "inter-v18-latin-regular.woff2"),
                },
            ],
            display: "swap",
            selector: "code",
            fallback: "monospace",
            cssVariable: "font-mono",
        },
    ]}
/>

<!-- SEO -->
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
<meta name="keywords" content={KEYWORDS.join(", ")} />
<meta name="author" content={AUTHOR.name} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.site).toString()} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content="en_US" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.site).toString()} />
<meta property="twitter:creator" content={AUTHOR.name} />

<ClientRouter />
<LoadingIndicator color="var(--loading-indicator-color)" height="3px" threshold={600} />

<!-- Dark mode script (to prevent flash of incorrect theme) -->
<script is:inline>
    const isBrowser = typeof localStorage !== "undefined";
    const getThemePreference = () => {
        if (isBrowser && localStorage.getItem("theme")) {
            return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (isBrowser) {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
        });
    }
</script>
